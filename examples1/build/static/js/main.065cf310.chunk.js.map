{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","console","log","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kNAgBeA,EAdF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,6BACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,M,gBCc7B,EArBA,WACX,IAAMK,EAAUC,IAAMC,IAHV,cAINC,EAAc,CAClBC,GAAI,IACJN,QAAS,mCACTO,KAAM,2BACNT,WAAW,GAEb,OAAOI,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAAAO,GAEb,OADgBT,IAAMU,KAdR,aAcsBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAnBF,aAmBE,YAAwBR,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCP1BK,EAZI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKjB,UAAU,SACZiB,ICHHC,EAAS,WAMb,OACE,yBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIR,6BACA,wGA8FSC,EAzFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGzB,MAAK,SAAA0B,GACJT,EAASS,QAEZ,IAEH,IA0CMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAzC,GAAI,OAAIA,EAAKG,aAE9B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAckB,QAASc,IACvB,6BACE,4BAAQ7B,QAAS,kBAAM4B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAAA1C,GAAI,OACnB,kBAAC,EAAD,CACE2C,IAAK3C,EAAKW,GACVX,KAAMA,EACNC,iBAAkB,kBAzCD,SAAAU,GACzB,IAAMX,EAAO6B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAElC,KAAOA,KAChCmC,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDmC,EACU3B,EAAImC,GAAajC,MAAK,SAAAkC,GAC5BjB,EAASD,EAAMa,KAAI,SAAA1C,GAAI,OAAIA,EAAKW,KAAOA,EAAKX,EAAO+C,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJpC,EAAKK,QADD,sCAGf6C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAElC,KAAOA,SA0BRwC,CAAmBnD,EAAKW,WAItD,0BAAMyC,SAhEM,SAAAC,GACdA,EAAMC,iBACN,IAAMC,EAAa,CACjBlD,QAAS0B,EACTnB,MAAM,IAAI4C,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAG7BrB,EACUiB,GACP1C,MAAK,SAAAkC,GACJjB,EAASD,EAAMb,OAAO+B,IACtBf,EAAW,OACVgB,OAAM,SAAAC,GAEPW,QAAQC,IAAIZ,EAAMnC,SAASC,WAkD3B,2BACE+C,MAAO/B,EACPgC,SA7BiB,SAACV,GACxBrB,EAAWqB,EAAMW,OAAOF,UA6BpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MCnGNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.065cf310.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <div>\r\n      <li className='note'>\r\n        {note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n      id: 10000,\r\n      content: 'This note is not saved to server',\r\n      date: '2019-05-30T17:30:31.098Z',\r\n      important: true,\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n  }\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification\r\n  ","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\n\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Made by Staffan, Centria University of applied sciences 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  const addNote = event => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      }).catch(error => {\r\n        // this is the way to access the error message\r\n        console.log(error.response.data)\r\n      })\r\n  }\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote).then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}